#Auto generate Debian Cloud Image with cloud-init, using gitlab ci

### Created at 2022-02-27 23:14:50 GMT+08:00
### Author:   <evsio0n>
### Email:    <bbq2001820@gmail.com>

---
stages:
  - test
  - build

variables:
  LOOP_DEVIVES: $LOOPNUM

default:
  tags:
    - debian

buster:test:losetup:
  stage: test
  script:
    - losetup -f
  allow_failure: false

buster:test:
  stage: test
  needs: ["buster:test:losetup"]
  script:
    - |
      echo -------------------
      echo "Debootstrap bullseye"
      echo -------------------
    - sed -i 's/deb.debian.org/mirrors.xtom.com.hk/g' /etc/apt/sources.list
    - |
      echo -------------------
      echo "Clean loopback device"
      echo -------------------
    - losetup -D
    - >
      apt-get update && apt-get install -y
      debootstrap qemu-utils qemu-system genisoimage sudo mount fdisk
    - |
      mkdir ./debian-image
      cd ./debian-image
      echo -------------------
      echo "Create loop image "
      echo -------------------
      dd if=/dev/zero of=debian-image.img bs=1M count=0 seek=10240 status=progress 
      echo -------------------
      echo "Repartition image"
      echo -------------------
      losetup -f debian-image.img
      sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | sudo fdisk ./debian-image.img
      o # clear the in memory partition table
      n # new partition
      p # primary partition
      1 # partition number 1 
      # default - start at beginning of disk
      +512M # 512 MB boot parttion
      n # new partition
      p # primary partition
      2 # partion number 2
      # default, start immediately after preceding partition
      # default, extend partition to end of disk
      a # make a partition bootable
      1 # bootable partition is partition 1 -- /dev/loop0p1
      p # print the in-memory partition table
      w # write the partition table
      q # and we're done
      EOF
      echo -------------------
      echo "Start building debian image"
      echo -------------------
      LOOPNUM=$(losetup -f)
      echo -------------------
      echo "First loop device is $LOOPNUM"
      echo -------------------
      losetup -fP ./debian-image.img
      mkfs.ext4 ${LOOPNUM}p1
      mkfs.ext4 ${LOOPNUM}p2
      mkdir ./chroot
      mount ${LOOPNUM}p1 ./chroot
      mkdir ./chroot/boot
      mount /${LOOPNUM}p2 ./chroot/boot
      echo $LOOPNUM > ./chroot/.loopnum
      wget https://ftp-master.debian.org/keys/release-11.asc -qO- | gpg --import --no-default-keyring --keyring ./debian-release-11.gpg
      debootstrap  \
        --keyring=./debian-release-11.gpg \
        --arch=amd64  \
        --variant=minbase  \
        --include "ca-certificates,cron,iptables,isc-dhcp-client,libnss-myhostname,ntp,ntpdate,rsyslog,ssh,sudo,dialog,whiptail,man-db,curl,dosfstools,e2fsck-static" \
        bullseye  \
        ./chroot  \
        https://mirror.xtom.com.hk/debian/
      sudo mount --bind /dev ./chroot/dev
      sudo mount --bind /run ./chroot/run
      echo -------------------
      echo "Start cloud-init"
      echo -------------------
      chroot ./chroot
      mount none -t proc /proc
      mount none -t sysfs /sys
      mount none -t devpts /dev/pts
      export HOME=/root
      export LC_ALL=C
      echo "hostname" > /etc/hostname
      echo -------------------
      echo "Change disk apt source"
      echo -------------------
      cat <<EOF > /etc/apt/sources.list
      deb https://mirrors.xtom.com/debian/ stable main contrib non-free
      deb-src https://mirrors.xtom.com/debian/ stable main contrib non-free
      deb-src https://mirrors.xtom.com/debian/ stable-proposed-updates main contrib non-free
      EOF
      echo -------------------
      echo "Configure fstab"
      echo -------------------
      cat <<EOF > /etc/fstab
      # /etc/fstab: static file system information.
      #
      # Use 'blkid' to print the universally unique identifier for a
      # device; this may be used with UUID= as a more robust way to name devices
      # that works even if disks are added and removed. See fstab(5).
      #
      # <file system>         <mount point>   <type>  <options>                       <dump>  <pass>
        /dev/sda2               /               ext4    errors=remount-ro               0       1
        /dev/sda1               /boot           ext4    defaults                        0       2
      EOF
      echo -------------------
      echo "Install systemd"
      echo -------------------
      DEBIAN_FRONTEND=noninteractive apt-get install -y systemd-sysv
      echo -------------------
      echo "Configure machine-id"
      echo -------------------
      dbus-uuidgen > /etc/machine-id
      ln -fs /etc/machine-id /var/lib/dbus/machine-id
      echo -------------------
      echo "Configure divert"
      echo -------------------
      dpkg-divert --local --rename --add /sbin/initctl
      ln -s /bin/true /sbin/initctl
      echo -------------------
      echo "Configure cloud-init"
      echo -------------------
      DEBIAN_FRONTEND=noninteractive apt-get install -y \
        os-prober \
        ifupdown \
        network-manager \
        resolvconf \
        locales \
        build-essential \
        module-assistant \
        cloud-init \
        grub-pc \
        grub2 \
        console-setup \
        linux-image-amd64
      echo -------------------
      echo "Configure network"
      echo -------------------
      cat <<EOF > /etc/network/interfaces
      # This file describes the network interfaces available on your system
      # and how to activate them. For more information, see interfaces(5).
      
      source /etc/network/interfaces.d/*
      
      # The loopback network interface
      auto lo
      iface lo inet loopback
      EOF
      echo -------------------
      echo "Configure timezone"
      echo -------------------
      echo "Asia/Hong_Kong" > /etc/timezone
      dpkg-reconfigure -f noninteractive tzdata
      echo -------------------
      echo "Configure locale"
      echo -------------------
      echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
      locale-gen
      echo -------------------
      echo "Configure resolv.conf"
      echo -------------------
      echo "resolvconf    resolvconf/linkify-resolvconf   boolean true" > /tmp/config.dat
      DEBCONF_DB_OVERRIDE='File {/tmp/config.dat}' dpkg-reconfigure -fnoninteractive resolvconf
      echo -------------------
      echo "Configure networkmanager"
      echo -------------------
      cat <<EOF > /etc/NetworkManager/NetworkManager.conf
      [main]
      rc-manager=resolvconf
      plugins=ifupdown,keyfile
      dns=default
      
      [ifupdown]
      managed=false
      EOF
      echo -------------------
      echo "Configure grub"
      echo -------------------
      grub-install --recheck ${cat ./.loopnum}
      update-grub
      
      echo -------------------
      echo "Configure done! Installing custom files"
      echo -------------------
      exit
      echo -------------------
      echo "Install custom motd"
      echo -------------------
      cat ./file-replacement/nexet-mot.d > ./chroot/etc/motd
      echo -------------------
      echo "Install custom packages"
      echo -------------------
      cat ./packages.list > ./chroot/packages.list
      chroot ./chroot
      DEBIAN_FRONTEND=noninteractive apt-get install -y -f -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" $(cat ./packages.list)
      rm ./packages.list
      echo -------------------
      echo "Installation complete!"
      echo -------------------
      
      echo -------------------
      echo "Cleanup"
      echo -------------------
      DEBIAN_FRONTEND=noninteractive apt-get -y autoremove
      truncate -s 0 /etc/machine-id
      dpkg-divert --rename --remove /sbin/initctl
      apt-get clean
      rm -rf /tmp/* ~/.bash_history
      umount -l /proc /sys /dev/pts
      export HISTSIZE=0
      exit
      umount ./chroot/dev
      umount ./chroot/run
      umount ./chroot/boot
      umount ./chroot
      qemu-img convert -p -f raw  ./debian-image.img -O qcow2 debian.qcow2
  after_script:
    - |
      echo -------------------
      echo "Umount loop device"
      echo -------------------
      losetup -D
  artifacts:
    paths:
      - debian.qcow2
