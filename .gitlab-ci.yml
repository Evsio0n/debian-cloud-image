#Auto generate Debian Cloud Image with cloud-init, using gitlab ci

### Created at 2022-02-27 23:14:50 GMT+08:00
### Author:   <evsio0n>
### Email:    <bbq2001820@gmail.com>

---
stages:
  - test
  - build

variables:
  LOOP_DEVIVES: $LOOPNUM

default:
  tags:
    - debian

buster:test:losetup:
  stage: test
  script:
    - losetup -f
  allow_failure: false

buster:test:
  stage: test
  needs: ["buster:test:losetup"]
  script:
    - |
      echo -------------------
      echo "Debootstrap bullseye"
      echo -------------------
    - sed -i 's/deb.debian.org/mirrors.xtom.com.hk/g' /etc/apt/sources.list
    - |
      echo -------------------
      echo "Clean loopback device"
      echo -------------------
    - losetup -D
    - >
      apt-get update && apt-get install -y
      debootstrap qemu-utils qemu-system genisoimage sudo mount fdisk
    - |
      mkdir ./debian-image
      cd ./debian-image
      echo -------------------
      echo "Create loop image "
      echo -------------------
      dd if=/dev/zero of=debian-image.img bs=1M count=0 seek=10240 status=progress 
      echo -------------------
      echo "Repartition image"
      echo -------------------
      losetup -f debian-image.img
      sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | sudo fdisk ./debian-image.img
      o # clear the in memory partition table
      n # new partition
      p # primary partition
      1 # partition number 1 
      # default - start at beginning of disk
      +512M # 512 MB boot parttion
      n # new partition
      p # primary partition
      2 # partion number 2
      # default, start immediately after preceding partition
      # default, extend partition to end of disk
      a # make a partition bootable
      1 # bootable partition is partition 1 -- /dev/loop0p1
      p # print the in-memory partition table
      w # write the partition table
      q # and we're done
      EOF
      echo -------------------
      echo "Start building debian image"
      echo -------------------
      LOOPNUM=$(losetup -f)
      echo -------------------
      echo "First loop device is $LOOPNUM"
      echo -------------------
      losetup -fP ./debian-image.img
      mkfs.ext4 ${LOOPNUM}p1
      mkfs.ext4 ${LOOPNUM}p2
      mkdir ./chroot
      mount ${LOOPNUM}p2 ./chroot
      mkdir ./chroot/boot
      mount /${LOOPNUM}p1 ./chroot/boot
      echo $LOOPNUM > ./chroot/.loopnum
      wget https://ftp-master.debian.org/keys/release-11.asc -qO- | gpg --import --no-default-keyring --keyring ./debian-release-11.gpg
      debootstrap  \
        --keyring=./debian-release-11.gpg \
        --arch=amd64  \
        --variant=minbase  \
        --include "ca-certificates,cron,iptables,isc-dhcp-client,libnss-myhostname,ntp,ntpdate,rsyslog,ssh,sudo,dialog,whiptail,man-db,curl,dosfstools,e2fsck-static" \
        bullseye  \
        ./chroot  \
        https://mirror.xtom.com.hk/debian/
      sudo mount --bind /dev ./chroot/dev
      sudo mount --bind /run ./chroot/run
      echo -------------------
      echo "Start cloud-init"
      echo -------------------
      ls ../
      cp ../package.list ./chroot/
      cp  ../install-chroot.sh ./chroot/
      echo -------------------
      echo "Install custom motd"
      echo -------------------
      $(cat ../file-replacement/nexet-mot.d > ./chroot/etc/motd)
      chmod +x ./chroot/install-chroot.sh
      chroot ./chroot bash ./install-chroot.sh
      umount -l  ./chroot/dev/pts ./chroot/dev ./chroot/proc ./chroot/sys ./chroot/run ./chroot/boot
      umount  ./chroot
      qemu-img convert -p -f raw  ./debian-image.img -O qcow2 debian.qcow2
  after_script:
    - |
      echo -------------------
      echo "Umount loop device"
      echo -------------------
      losetup -D
  artifacts:
    paths:
      - ./debian-image/debian.qcow2
